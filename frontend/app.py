import json
import requests
import streamlit as st

st.title("üí¨ Chatbot RAG - Semantic Route API Demo")

# URL m·ªõi c·ªßa API
API_URL = "http://127.0.0.1:8000/rag_basic/search"

# H√†m g·ªçi API RAG m·ªõi
def call_rag_api(messages):
    payload = {
        "data": messages  # D·∫°ng list c√°c dict {"role": ..., "content": ...}
    }

    response = requests.post(API_URL, json=payload, timeout=60)
    if response.status_code != 200:
        raise Exception(f"‚ùå API l·ªói: {response.text}")
    return response.json()


# L∆∞u tr·ªØ l·ªãch s·ª≠ h·ªôi tho·∫°i
if "messages" not in st.session_state:
    st.session_state.messages = []

# Hi·ªÉn th·ªã c√°c tin nh·∫Øn tr∆∞·ªõc ƒë√≥
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# √î nh·∫≠p prompt ng∆∞·ªùi d√πng
if prompt := st.chat_input("H√£y ƒë·∫∑t c√¢u h·ªèi v·ªÅ t√†i ch√≠nh, s·∫£n ph·∫©m ho·∫∑c b·∫•t c·ª© ƒëi·ªÅu g√¨..."):
    user_msg = {"role": "user", "content": prompt}
    st.session_state.messages.append(user_msg)

    # Hi·ªÉn th·ªã tin nh·∫Øn ng∆∞·ªùi d√πng
    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        try:
            # G·ª≠i to√†n b·ªô l·ªãch s·ª≠ h·ªôi tho·∫°i (bao g·ªìm prompt m·ªõi)
            response = call_rag_api(st.session_state.messages)
            reply = response.get("content", "‚ö†Ô∏è Kh√¥ng c√≥ ph·∫£n h·ªìi.")
            
            st.markdown(reply)
            st.session_state.messages.append({"role": "assistant", "content": reply})

        except Exception as e:
            st.error(str(e))
            st.session_state.messages.append({"role": "assistant", "content": "‚ùå ƒê√£ x·∫£y ra l·ªói khi g·ªçi API."})
